import Fastify from 'fastify'
import fastifySwagger from '@fastify/swagger'
import fastifySwaggerUi from "@fastify/swagger-ui";

import router from './api/router.js'
import {config} from "./config.js";

const fastify = Fastify({
    logger: true
})

fastify.register(fastifySwagger, {
    exposeRoute: true,
    openapi: {
        info: {
            title: "API documentation",
            description: "Autogenerated API documentation",
            version: "1.0.0",
        },
        externalDocs: {
            url: "https://swagger.io",
            description: "Find more info here",
        },
        host: "localhost:3000",
        schemes: ["http", "https"],
        consumes: ["application/json"],
        produces: ["application/json"],
    },
})

fastify.register(fastifySwaggerUi, {prefix: 'api-doc'})
fastify.register(router)

const start = async () => {
    try {
        fastify.log.info('Server is starting...')
        await fastify.listen({port: config.server.port})
        const shutdown = () => {
            fastify.log.info('Server is shutting down...')
            fastify.close(() => {
                fastify.log.info('Server is now closed')
                process.exit(0)
            })
        }
        process.on('SIGINT', shutdown)
        process.on('SIGTERM', shutdown)
    } catch (err) {
        fastify.log.error(err)
        process.exit(1)
    }
}
await start()


